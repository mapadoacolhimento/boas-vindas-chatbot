service: aws-python-chatbot-api

frameworkVersion: '3'
useDotenv: true

package:
  exclude:
    - node_modules/**
    - venv/**

custom:
  wsgi:
    app: app.app
    pythonBin: python3
  pythonRequirements:
    zip: true
    slim: true
  bucketName: ${env:AWS_S3_BUCKET_NAME}

provider:
  name: aws
  runtime: python3.9
  region: ${env:AWS_REGION}
  iamRoleStatements:
  - Effect: Allow
    Action:
      - s3:*
    Resource: "arn:aws:s3:::${self:custom.bucketName}/*"

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'
    environment:
      OPENAI_API_KEY: ${env:OPENAI_API_KEY}

resources:
  Resources:
    ChatbotBucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.bucketName}
        OwnershipControls:
          Rules:
            - ObjectOwnership: ObjectWriter
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
    ChatbotBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: ChatbotBucket
        PolicyDocument:
          Statement:
            - Action:
                - s3:GetObject
                - s3:PutObject
              Effect: Allow
              Principal: "*"
              Resource: arn:aws:s3:::${self:custom.bucketName}/*

plugins:
  - serverless-wsgi
  - serverless-python-requirements
