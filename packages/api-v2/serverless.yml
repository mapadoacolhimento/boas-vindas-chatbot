service: aws-nodejs-chatbot-api

frameworkVersion: "3"
useDotenv: true

custom:
  bucketName: ${env:AWS_S3_BUCKET_NAME}
  esbuild:
    minify: true
    bundle: true
    external:
      - llamaindex
    watch:
      pattern: ['./handler.ts', 'src/**/*.ts'] # default .
      ignore: ['.serverless/**/*', '.build'] # default ['.build', 'dist', 'node_modules']

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_REGION}
  iamRoleStatements:
  - Effect: Allow
    Action:
      - s3:*
    Resource: "arn:aws:s3:::${self:custom.bucketName}/*"

functions:
  chat:
    handler: handler.chat
    events:
      - http:
          path: chat
          method: post
          cors: true
    environment:
      OPENAI_API_KEY: ${env:OPENAI_API_KEY}
      AWS_S3_BUCKET_NAME: ${env:AWS_S3_BUCKET_NAME}
      AWS_ROOT_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
      AWS_ROOT_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
      NODE_ENV: ${env:NODE_ENV}
    timeout: 30    
  content:
    handler: handler.content
    events:
      - http:
          path: content
          method: get
          cors: true
    environment:
      OPENAI_API_KEY: ${env:OPENAI_API_KEY}
      AWS_S3_BUCKET_NAME: ${env:AWS_S3_BUCKET_NAME}
      AWS_ROOT_ACCESS_KEY_ID: ${env:AWS_ACCESS_KEY_ID}
      AWS_ROOT_SECRET_ACCESS_KEY: ${env:AWS_SECRET_ACCESS_KEY}
      NODE_ENV: ${env:NODE_ENV}
    timeout: 30    

plugins:
  - serverless-offline
  - serverless-esbuild